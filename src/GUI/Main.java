/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import JSON.JsonValidator;
import java.awt.Color;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Benquerer
 */
public class Main extends javax.swing.JFrame {

    private final Color myGray = new Color(0x191825);
    private final Color myPurple = new Color(0x865DFF);
    private final Color myWhite = new Color(0xF8F7F3);

    private File selectedFileToValidate;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        dispTxtPnl.setVisible(false);
        dispFilePnl.setVisible(false);
        dispSavePnl.setVisible(false);
        setLocationRelativeTo(null);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePnl = new javax.swing.JPanel();
        optionsPnl = new javax.swing.JPanel();
        txtPnl = new javax.swing.JPanel();
        txtLbl = new javax.swing.JLabel();
        filePnl = new javax.swing.JPanel();
        fileLbl = new javax.swing.JLabel();
        savePnl = new javax.swing.JPanel();
        saveLbl = new javax.swing.JLabel();
        exitPnl = new javax.swing.JPanel();
        exitLbl = new javax.swing.JLabel();
        titlePnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dispPanel = new javax.swing.JPanel();
        dispTxtPnl = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtToVal = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        txtCheckLbl = new javax.swing.JLabel();
        valPnl1 = new javax.swing.JPanel();
        valPnl2 = new javax.swing.JPanel();
        dispFilePnl = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        checkLoad = new javax.swing.JLabel();
        valPnl3 = new javax.swing.JPanel();
        valPnl4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btChooseFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        selectedFile = new javax.swing.JLabel();
        dispSavePnl = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        toSaveTxTArea = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        saveBt = new javax.swing.JLabel();
        valPnl5 = new javax.swing.JPanel();
        valPnl6 = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        menu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JSON Validator");
        setMinimumSize(new java.awt.Dimension(1200, 650));
        setResizable(false);

        sidePnl.setBackground(myGray);
        sidePnl.setFocusable(false);
        sidePnl.setMaximumSize(new java.awt.Dimension(330, 627));
        sidePnl.setMinimumSize(new java.awt.Dimension(330, 627));
        sidePnl.setName(""); // NOI18N
        sidePnl.setOpaque(false);
        sidePnl.setPreferredSize(new java.awt.Dimension(330, 627));
        sidePnl.setLayout(new java.awt.BorderLayout());

        optionsPnl.setBackground(myGray);
        optionsPnl.setMaximumSize(new java.awt.Dimension(330, 477));
        optionsPnl.setMinimumSize(new java.awt.Dimension(330, 477));
        optionsPnl.setPreferredSize(new java.awt.Dimension(330, 477));
        optionsPnl.setLayout(new java.awt.GridLayout(0, 1));

        txtPnl.setBackground(myGray);
        txtPnl.setForeground(myPurple);
        txtPnl.setToolTipText("validate from text");
        txtPnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPnlMouseClicked(evt);
            }
        });
        txtPnl.setLayout(new java.awt.BorderLayout());

        txtLbl.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        txtLbl.setForeground(myPurple);
        txtLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/file.png"))); // NOI18N
        txtLbl.setText("Validate from Text");
        txtLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLblMouseClicked(evt);
            }
        });
        txtPnl.add(txtLbl, java.awt.BorderLayout.CENTER);

        optionsPnl.add(txtPnl);

        filePnl.setBackground(myGray);
        filePnl.setForeground(myPurple);
        filePnl.setLayout(new java.awt.BorderLayout());

        fileLbl.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        fileLbl.setForeground(myPurple);
        fileLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/upload.png"))); // NOI18N
        fileLbl.setText("Validate from File");
        fileLbl.setToolTipText("validate from file");
        fileLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fileLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileLblMouseClicked(evt);
            }
        });
        filePnl.add(fileLbl, java.awt.BorderLayout.CENTER);

        optionsPnl.add(filePnl);

        savePnl.setBackground(myGray);
        savePnl.setForeground(myPurple);
        savePnl.setLayout(new java.awt.BorderLayout());

        saveLbl.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        saveLbl.setForeground(myPurple);
        saveLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/save.png"))); // NOI18N
        saveLbl.setText("Save JSON in File");
        saveLbl.setToolTipText("save json");
        saveLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveLblMouseClicked(evt);
            }
        });
        savePnl.add(saveLbl, java.awt.BorderLayout.CENTER);

        optionsPnl.add(savePnl);

        exitPnl.setBackground(myGray);
        exitPnl.setForeground(myPurple);
        exitPnl.setLayout(new java.awt.BorderLayout());

        exitLbl.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        exitLbl.setForeground(myPurple);
        exitLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/ext.png"))); // NOI18N
        exitLbl.setText("Finish");
        exitLbl.setToolTipText("exit app");
        exitLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        exitLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLblMouseClicked(evt);
            }
        });
        exitPnl.add(exitLbl, java.awt.BorderLayout.CENTER);

        optionsPnl.add(exitPnl);

        sidePnl.add(optionsPnl, java.awt.BorderLayout.CENTER);

        titlePnl.setBackground(myGray);
        titlePnl.setPreferredSize(new java.awt.Dimension(330, 150));
        titlePnl.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 42)); // NOI18N
        jLabel1.setForeground(myPurple);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("JSON Validator");
        titlePnl.add(jLabel1, java.awt.BorderLayout.CENTER);

        sidePnl.add(titlePnl, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(sidePnl, java.awt.BorderLayout.WEST);

        dispPanel.setBackground(myGray);
        dispPanel.setFocusable(false);
        dispPanel.setMaximumSize(new java.awt.Dimension(870, 627));
        dispPanel.setMinimumSize(new java.awt.Dimension(870, 627));
        dispPanel.setName(""); // NOI18N
        dispPanel.setPreferredSize(new java.awt.Dimension(870, 627));
        dispPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dispTxtPnl.setBackground(myGray);
        dispTxtPnl.setPreferredSize(new java.awt.Dimension(870, 627));
        dispTxtPnl.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(myGray);
        jPanel2.setMaximumSize(new java.awt.Dimension(870, 125));
        jPanel2.setMinimumSize(new java.awt.Dimension(870, 125));
        jPanel2.setPreferredSize(new java.awt.Dimension(870, 125));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setBackground(myGray);
        jLabel2.setFont(new java.awt.Font("Yu Gothic Medium", 0, 24)); // NOI18N
        jLabel2.setForeground(myPurple);
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Type in the text you want to validate:");
        jPanel2.add(jLabel2, java.awt.BorderLayout.CENTER);

        dispTxtPnl.add(jPanel2, java.awt.BorderLayout.NORTH);

        txtToVal.setColumns(20);
        txtToVal.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txtToVal.setRows(5);
        txtToVal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtToValKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtToVal);

        dispTxtPnl.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(myGray);
        jPanel3.setMaximumSize(new java.awt.Dimension(870, 175));
        jPanel3.setMinimumSize(new java.awt.Dimension(870, 175));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCheckLbl.setFont(new java.awt.Font("Yu Gothic Medium", 0, 36)); // NOI18N
        txtCheckLbl.setForeground(myPurple);
        txtCheckLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtCheckLbl.setText("CHECK !");
        txtCheckLbl.setToolTipText("validate");
        txtCheckLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCheckLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCheckLblMouseClicked(evt);
            }
        });
        jPanel3.add(txtCheckLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 310, 140));

        dispTxtPnl.add(jPanel3, java.awt.BorderLayout.SOUTH);

        valPnl1.setBackground(myGray);
        valPnl1.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl1.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl1.setPreferredSize(new java.awt.Dimension(100, 627));
        valPnl1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl1Layout = new javax.swing.GroupLayout(valPnl1);
        valPnl1.setLayout(valPnl1Layout);
        valPnl1Layout.setHorizontalGroup(
            valPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl1Layout.setVerticalGroup(
            valPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispTxtPnl.add(valPnl1, java.awt.BorderLayout.EAST);

        valPnl2.setBackground(myGray);
        valPnl2.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl2.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl2.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl2Layout = new javax.swing.GroupLayout(valPnl2);
        valPnl2.setLayout(valPnl2Layout);
        valPnl2Layout.setHorizontalGroup(
            valPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl2Layout.setVerticalGroup(
            valPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispTxtPnl.add(valPnl2, java.awt.BorderLayout.WEST);

        dispPanel.add(dispTxtPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        dispFilePnl.setBackground(myGray);
        dispFilePnl.setPreferredSize(new java.awt.Dimension(870, 627));
        dispFilePnl.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(myGray);
        jPanel4.setMaximumSize(new java.awt.Dimension(870, 125));
        jPanel4.setMinimumSize(new java.awt.Dimension(870, 125));
        jPanel4.setPreferredSize(new java.awt.Dimension(870, 125));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel4.setBackground(myGray);
        jLabel4.setFont(new java.awt.Font("Yu Gothic Medium", 0, 24)); // NOI18N
        jLabel4.setForeground(myPurple);
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Choose a File to Validate:");
        jPanel4.add(jLabel4, java.awt.BorderLayout.CENTER);

        dispFilePnl.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel5.setBackground(myGray);
        jPanel5.setMaximumSize(new java.awt.Dimension(870, 175));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        checkLoad.setFont(new java.awt.Font("Yu Gothic Medium", 0, 36)); // NOI18N
        checkLoad.setForeground(myPurple);
        checkLoad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        checkLoad.setText("CHECK !");
        checkLoad.setToolTipText("");
        checkLoad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkLoadMouseClicked(evt);
            }
        });
        jPanel5.add(checkLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 175));

        dispFilePnl.add(jPanel5, java.awt.BorderLayout.SOUTH);

        valPnl3.setBackground(myGray);
        valPnl3.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl3.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl3.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl3Layout = new javax.swing.GroupLayout(valPnl3);
        valPnl3.setLayout(valPnl3Layout);
        valPnl3Layout.setHorizontalGroup(
            valPnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl3Layout.setVerticalGroup(
            valPnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispFilePnl.add(valPnl3, java.awt.BorderLayout.EAST);

        valPnl4.setBackground(myGray);
        valPnl4.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl4.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl4.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl4Layout = new javax.swing.GroupLayout(valPnl4);
        valPnl4.setLayout(valPnl4Layout);
        valPnl4Layout.setHorizontalGroup(
            valPnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl4Layout.setVerticalGroup(
            valPnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispFilePnl.add(valPnl4, java.awt.BorderLayout.WEST);

        jPanel1.setBackground(myGray);

        btChooseFile.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btChooseFile.setText("Choose File");
        btChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChooseFileActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(myPurple);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Selected File:");

        selectedFile.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        selectedFile.setForeground(myWhite);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(btChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(selectedFile, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(selectedFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(351, Short.MAX_VALUE))
        );

        dispFilePnl.add(jPanel1, java.awt.BorderLayout.CENTER);

        dispPanel.add(dispFilePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        dispSavePnl.setBackground(myGray);
        dispSavePnl.setPreferredSize(new java.awt.Dimension(870, 627));
        dispSavePnl.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(myGray);
        jPanel6.setMaximumSize(new java.awt.Dimension(870, 125));
        jPanel6.setMinimumSize(new java.awt.Dimension(870, 125));
        jPanel6.setPreferredSize(new java.awt.Dimension(870, 125));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel6.setBackground(myGray);
        jLabel6.setFont(new java.awt.Font("Yu Gothic Medium", 0, 24)); // NOI18N
        jLabel6.setForeground(myPurple);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Type in the Json you want to save:");
        jPanel6.add(jLabel6, java.awt.BorderLayout.CENTER);

        dispSavePnl.add(jPanel6, java.awt.BorderLayout.NORTH);

        toSaveTxTArea.setColumns(20);
        toSaveTxTArea.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        toSaveTxTArea.setRows(5);
        toSaveTxTArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                toSaveTxTAreaKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(toSaveTxTArea);

        dispSavePnl.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel7.setBackground(myGray);
        jPanel7.setMaximumSize(new java.awt.Dimension(870, 175));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saveBt.setFont(new java.awt.Font("Yu Gothic Medium", 0, 36)); // NOI18N
        saveBt.setForeground(myPurple);
        saveBt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveBt.setText("Save in .txt file!");
        saveBt.setToolTipText("save");
        saveBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtMouseClicked(evt);
            }
        });
        jPanel7.add(saveBt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 175));

        dispSavePnl.add(jPanel7, java.awt.BorderLayout.SOUTH);

        valPnl5.setBackground(myGray);
        valPnl5.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl5.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl5.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl5Layout = new javax.swing.GroupLayout(valPnl5);
        valPnl5.setLayout(valPnl5Layout);
        valPnl5Layout.setHorizontalGroup(
            valPnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl5Layout.setVerticalGroup(
            valPnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispSavePnl.add(valPnl5, java.awt.BorderLayout.EAST);

        valPnl6.setBackground(myGray);
        valPnl6.setMaximumSize(new java.awt.Dimension(100, 627));
        valPnl6.setMinimumSize(new java.awt.Dimension(100, 627));
        valPnl6.setRequestFocusEnabled(false);

        javax.swing.GroupLayout valPnl6Layout = new javax.swing.GroupLayout(valPnl6);
        valPnl6.setLayout(valPnl6Layout);
        valPnl6Layout.setHorizontalGroup(
            valPnl6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        valPnl6Layout.setVerticalGroup(
            valPnl6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        dispSavePnl.add(valPnl6, java.awt.BorderLayout.WEST);

        dispPanel.add(dispSavePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(dispPanel, java.awt.BorderLayout.CENTER);

        menuBar.setBackground(myGray);

        menu1.setText("App");

        jMenuItem1.setText("About us");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menu1.add(jMenuItem1);

        menuBar.add(menu1);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPnlMouseClicked
        dispTxtPnl.setVisible(true);
        dispFilePnl.setVisible(false);
        dispSavePnl.setVisible(false);

    }//GEN-LAST:event_txtPnlMouseClicked

    private void txtLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLblMouseClicked
        dispTxtPnl.setVisible(true);
        dispFilePnl.setVisible(false);
        dispSavePnl.setVisible(false);
    }//GEN-LAST:event_txtLblMouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked

    }//GEN-LAST:event_jPanel3MouseClicked

    private void txtCheckLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCheckLblMouseClicked
        String str = txtToVal.getText();
        JSON.JsonValidator validator = new JsonValidator();
        if (validator.isValid(str)) {
            valPnl1.setBackground(new Color(0x00FF00));
            valPnl2.setBackground(new Color(0x00FF00));
            txtCheckLbl.setText("VALID!!");
        } else {
            valPnl1.setBackground(new Color(0xFF0000));
            valPnl2.setBackground(new Color(0xFF0000));
            txtCheckLbl.setText("INVALID!!");
        }
    }//GEN-LAST:event_txtCheckLblMouseClicked

    private void txtToValKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToValKeyPressed
        valPnl1.setBackground(myGray);
        valPnl2.setBackground(myGray);
        txtCheckLbl.setText("CHECK !");
    }//GEN-LAST:event_txtToValKeyPressed

    private void fileLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileLblMouseClicked
        dispTxtPnl.setVisible(false);
        dispFilePnl.setVisible(true);
        dispSavePnl.setVisible(false);
    }//GEN-LAST:event_fileLblMouseClicked

    private void saveLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveLblMouseClicked
        dispTxtPnl.setVisible(false);
        dispFilePnl.setVisible(false);
        dispSavePnl.setVisible(true);
    }//GEN-LAST:event_saveLblMouseClicked

    private void btChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChooseFileActionPerformed

        try {
            JFileChooser filech = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files (*.txt)", "txt");
            filech.setFileFilter(filter);
            filech.showOpenDialog(this);
            selectedFileToValidate = filech.getSelectedFile();
            selectedFile.setText(selectedFileToValidate.getName());
            valPnl3.setBackground(myGray);
            valPnl4.setBackground(myGray);
            checkLoad.setText("CHECK !");
        } catch (NullPointerException ex) {
            System.out.println("NO FILE WAS SELECTED");
        }

    }//GEN-LAST:event_btChooseFileActionPerformed

    private void checkLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkLoadMouseClicked
        try {
            String txt = "";
            BufferedReader reader = null;
            try {
                reader = new BufferedReader(new FileReader(selectedFileToValidate));
                String line;
                while ((line = reader.readLine()) != null) {
                    txt += line;
                }
                reader.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            JSON.JsonValidator validator = new JsonValidator();
            if (validator.isValid(txt)) {
                valPnl3.setBackground(new Color(0x00FF00));
                valPnl4.setBackground(new Color(0x00FF00));
                checkLoad.setText("VALID!!");
            } else {
                valPnl3.setBackground(new Color(0xFF0000));
                valPnl4.setBackground(new Color(0xFF0000));
                checkLoad.setText("INVALID!!");
            }
        } catch (NullPointerException ex) {
            System.out.println(new Exception("NO FILE SELECTED"));
        } catch (Exception ex) {
            System.out.println(new Exception("UNKNOWN ERROR"));
        }
    }//GEN-LAST:event_checkLoadMouseClicked

    private void saveBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtMouseClicked
        String txtTosave = toSaveTxTArea.getText();
        JSON.JsonValidator valid = new JsonValidator();
        if (valid.isValid(txtTosave)) {
            try {
                JFileChooser fileSaver = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files (*.txt)", "txt");
                fileSaver.setFileFilter(filter);
                fileSaver.showSaveDialog(this);
                File saveFile = fileSaver.getSelectedFile();
                try {
                    BufferedWriter writer = new BufferedWriter(new FileWriter(saveFile));
                    writer.write(txtTosave);
                    writer.close();
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (Exception ex) {
                System.out.println("FILE NOT SELECTED");
            }
        }else{
            valPnl5.setBackground(new Color(0xFF0000));
            valPnl6.setBackground(new Color(0xFF0000));
            saveBt.setText("INVALID!!");
        }


    }//GEN-LAST:event_saveBtMouseClicked

    private void exitLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLblMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitLblMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AboutUs a = new AboutUs();
        a.setVisible(true);
        a.setLocationRelativeTo(this);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void toSaveTxTAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toSaveTxTAreaKeyPressed
        // TODO add your handling code here:
        valPnl5.setBackground(myGray);
        valPnl6.setBackground(myGray);
        saveBt.setText("Save in .txt file!");
    }//GEN-LAST:event_toSaveTxTAreaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btChooseFile;
    private javax.swing.JLabel checkLoad;
    private javax.swing.JPanel dispFilePnl;
    private javax.swing.JPanel dispPanel;
    private javax.swing.JPanel dispSavePnl;
    private javax.swing.JPanel dispTxtPnl;
    private javax.swing.JLabel exitLbl;
    private javax.swing.JPanel exitPnl;
    private javax.swing.JLabel fileLbl;
    private javax.swing.JPanel filePnl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenu menu1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel optionsPnl;
    private javax.swing.JLabel saveBt;
    private javax.swing.JLabel saveLbl;
    private javax.swing.JPanel savePnl;
    private javax.swing.JLabel selectedFile;
    private javax.swing.JPanel sidePnl;
    private javax.swing.JPanel titlePnl;
    private javax.swing.JTextArea toSaveTxTArea;
    private javax.swing.JLabel txtCheckLbl;
    private javax.swing.JLabel txtLbl;
    private javax.swing.JPanel txtPnl;
    private javax.swing.JTextArea txtToVal;
    private javax.swing.JPanel valPnl1;
    private javax.swing.JPanel valPnl2;
    private javax.swing.JPanel valPnl3;
    private javax.swing.JPanel valPnl4;
    private javax.swing.JPanel valPnl5;
    private javax.swing.JPanel valPnl6;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/GUI/resources/documents.png")));
    }
}
